/*
 * This file is generated by jOOQ.
 */
package com.ddastudio.fishing.jooq.tables.records;


import com.ddastudio.fishing.jooq.tables.TestMaster;
import com.google.gson.JsonElement;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestMasterRecord extends UpdatableRecordImpl<TestMasterRecord> implements Record4<Integer, String, String, JsonElement> {

    private static final long serialVersionUID = -1159780431;

    /**
     * Setter for <code>fishing_reservation.test_master.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>fishing_reservation.test_master.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>fishing_reservation.test_master.col1</code>.
     */
    public void setCol1(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>fishing_reservation.test_master.col1</code>.
     */
    public String getCol1() {
        return (String) get(1);
    }

    /**
     * Setter for <code>fishing_reservation.test_master.col2</code>.
     */
    public void setCol2(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>fishing_reservation.test_master.col2</code>.
     */
    public String getCol2() {
        return (String) get(2);
    }

    /**
     * Setter for <code>fishing_reservation.test_master.col3</code>.
     */
    public void setCol3(JsonElement value) {
        set(3, value);
    }

    /**
     * Getter for <code>fishing_reservation.test_master.col3</code>.
     */
    public JsonElement getCol3() {
        return (JsonElement) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, JsonElement> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, JsonElement> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TestMaster.TEST_MASTER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TestMaster.TEST_MASTER.COL1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TestMaster.TEST_MASTER.COL2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<JsonElement> field4() {
        return TestMaster.TEST_MASTER.COL3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCol1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCol2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonElement component4() {
        return getCol3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCol1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCol2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonElement value4() {
        return getCol3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestMasterRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestMasterRecord value2(String value) {
        setCol1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestMasterRecord value3(String value) {
        setCol2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestMasterRecord value4(JsonElement value) {
        setCol3(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestMasterRecord values(Integer value1, String value2, String value3, JsonElement value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TestMasterRecord
     */
    public TestMasterRecord() {
        super(TestMaster.TEST_MASTER);
    }

    /**
     * Create a detached, initialised TestMasterRecord
     */
    public TestMasterRecord(Integer id, String col1, String col2, JsonElement col3) {
        super(TestMaster.TEST_MASTER);

        set(0, id);
        set(1, col1);
        set(2, col2);
        set(3, col3);
    }
}
