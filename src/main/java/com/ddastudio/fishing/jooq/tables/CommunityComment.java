/*
 * This file is generated by jOOQ.
 */
package com.ddastudio.fishing.jooq.tables;


import com.ddastudio.fishing.jooq.FishingReservation;
import com.ddastudio.fishing.jooq.tables.records.CommunityCommentRecord;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * 커뮤니티 댓글
 *  - 현재 사용안함
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommunityComment extends TableImpl<CommunityCommentRecord> {

    private static final long serialVersionUID = 1686622270;

    /**
     * The reference instance of <code>fishing_reservation.community_comment</code>
     */
    public static final CommunityComment COMMUNITY_COMMENT = new CommunityComment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CommunityCommentRecord> getRecordType() {
        return CommunityCommentRecord.class;
    }

    /**
     * The column <code>fishing_reservation.community_comment.id</code>.
     */
    public final TableField<CommunityCommentRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>fishing_reservation.community_comment.uid</code>.
     */
    public final TableField<CommunityCommentRecord, UInteger> UID = createField("uid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>fishing_reservation.community_comment.body</code>.
     */
    public final TableField<CommunityCommentRecord, String> BODY = createField("body", org.jooq.impl.SQLDataType.VARCHAR(300), this, "");

    /**
     * The column <code>fishing_reservation.community_comment.created</code>.
     */
    public final TableField<CommunityCommentRecord, LocalDateTime> CREATED = createField("created", org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>fishing_reservation.community_comment.updated</code>.
     */
    public final TableField<CommunityCommentRecord, LocalDateTime> UPDATED = createField("updated", org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>fishing_reservation.community_comment</code> table reference
     */
    public CommunityComment() {
        this(DSL.name("community_comment"), null);
    }

    /**
     * Create an aliased <code>fishing_reservation.community_comment</code> table reference
     */
    public CommunityComment(String alias) {
        this(DSL.name(alias), COMMUNITY_COMMENT);
    }

    /**
     * Create an aliased <code>fishing_reservation.community_comment</code> table reference
     */
    public CommunityComment(Name alias) {
        this(alias, COMMUNITY_COMMENT);
    }

    private CommunityComment(Name alias, Table<CommunityCommentRecord> aliased) {
        this(alias, aliased, null);
    }

    private CommunityComment(Name alias, Table<CommunityCommentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("커뮤니티 댓글\n - 현재 사용안함\n"));
    }

    public <O extends Record> CommunityComment(Table<O> child, ForeignKey<O, CommunityCommentRecord> key) {
        super(child, key, COMMUNITY_COMMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return FishingReservation.FISHING_RESERVATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommunityComment as(String alias) {
        return new CommunityComment(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommunityComment as(Name alias) {
        return new CommunityComment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CommunityComment rename(String name) {
        return new CommunityComment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CommunityComment rename(Name name) {
        return new CommunityComment(name, null);
    }
}
