/*
 * This file is generated by jOOQ.
 */
package com.ddastudio.fishing.jooq.tables;


import com.ddastudio.fishing.jooq.FishingReservation;
import com.ddastudio.fishing.jooq.Indexes;
import com.ddastudio.fishing.jooq.Keys;
import com.ddastudio.fishing.jooq.tables.records.FishingEnvironmentRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FishingEnvironment extends TableImpl<FishingEnvironmentRecord> {

    private static final long serialVersionUID = 1022682830;

    /**
     * The reference instance of <code>fishing_reservation.fishing_environment</code>
     */
    public static final FishingEnvironment FISHING_ENVIRONMENT = new FishingEnvironment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FishingEnvironmentRecord> getRecordType() {
        return FishingEnvironmentRecord.class;
    }

    /**
     * The column <code>fishing_reservation.fishing_environment.id</code>.
     */
    public final TableField<FishingEnvironmentRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>fishing_reservation.fishing_environment.property</code>.
     */
    public final TableField<FishingEnvironmentRecord, String> PROPERTY = createField("property", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>fishing_reservation.fishing_environment.app_id</code>.
     */
    public final TableField<FishingEnvironmentRecord, Integer> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>fishing_reservation.fishing_environment.created</code>.
     */
    public final TableField<FishingEnvironmentRecord, LocalDateTime> CREATED = createField("created", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>fishing_reservation.fishing_environment.updated</code>.
     */
    public final TableField<FishingEnvironmentRecord, LocalDateTime> UPDATED = createField("updated", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>fishing_reservation.fishing_environment.use_yn</code>.
     */
    public final TableField<FishingEnvironmentRecord, String> USE_YN = createField("use_yn", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>fishing_reservation.fishing_environment</code> table reference
     */
    public FishingEnvironment() {
        this(DSL.name("fishing_environment"), null);
    }

    /**
     * Create an aliased <code>fishing_reservation.fishing_environment</code> table reference
     */
    public FishingEnvironment(String alias) {
        this(DSL.name(alias), FISHING_ENVIRONMENT);
    }

    /**
     * Create an aliased <code>fishing_reservation.fishing_environment</code> table reference
     */
    public FishingEnvironment(Name alias) {
        this(alias, FISHING_ENVIRONMENT);
    }

    private FishingEnvironment(Name alias, Table<FishingEnvironmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private FishingEnvironment(Name alias, Table<FishingEnvironmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> FishingEnvironment(Table<O> child, ForeignKey<O, FishingEnvironmentRecord> key) {
        super(child, key, FISHING_ENVIRONMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return FishingReservation.FISHING_RESERVATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FISHING_ENVIRONMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FishingEnvironmentRecord> getPrimaryKey() {
        return Keys.KEY_FISHING_ENVIRONMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FishingEnvironmentRecord>> getKeys() {
        return Arrays.<UniqueKey<FishingEnvironmentRecord>>asList(Keys.KEY_FISHING_ENVIRONMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FishingEnvironment as(String alias) {
        return new FishingEnvironment(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FishingEnvironment as(Name alias) {
        return new FishingEnvironment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FishingEnvironment rename(String name) {
        return new FishingEnvironment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FishingEnvironment rename(Name name) {
        return new FishingEnvironment(name, null);
    }
}
