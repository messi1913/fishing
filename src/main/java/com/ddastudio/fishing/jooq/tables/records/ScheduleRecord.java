/*
 * This file is generated by jOOQ.
 */
package com.ddastudio.fishing.jooq.tables.records;


import com.ddastudio.fishing.jooq.tables.Schedule;
import com.google.gson.JsonElement;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 일정 관리
 *  - 관리자가 입력
 *  - 하나의 배는 from_time이 겹치지 않으면 하루에 여러건의 일정 등록이 가능
 *  - 일정이 등록되어야 예약이 가능함
 *  - 일정 등록화면에서 배를 선택하게 되면 boat_master 테이블에 저장된 값을 기본값으로 from_time, to_time, 
 * fish_type, capacity, price, captain_id 값을 세팅해줌
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduleRecord extends UpdatableRecordImpl<ScheduleRecord> implements Record20<Integer, Integer, Integer, String, String, String, String, JsonElement, Integer, Integer, Integer, Integer, Integer, Integer, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -523201324;

    /**
     * Setter for <code>fishing_reservation.schedule.id</code>. 일정 아이디
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.id</code>. 일정 아이디
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.app_id</code>. 앱 아이디
     */
    public void setAppId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.app_id</code>. 앱 아이디
     */
    public Integer getAppId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.boat_id</code>. 배 아이디
     */
    public void setBoatId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.boat_id</code>. 배 아이디
     */
    public Integer getBoatId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.yyyymmdd</code>. 일자
     */
    public void setYyyymmdd(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.yyyymmdd</code>. 일자
     */
    public String getYyyymmdd() {
        return (String) get(3);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.name</code>.
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.name</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.from_time</code>. 출항시간
     */
    public void setFromTime(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.from_time</code>. 출항시간
     */
    public String getFromTime() {
        return (String) get(5);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.to_time</code>. 도착시간
     */
    public void setToTime(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.to_time</code>. 도착시간
     */
    public String getToTime() {
        return (String) get(6);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.fish_type</code>. 어종
     */
    public void setFishType(JsonElement value) {
        set(7, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.fish_type</code>. 어종
     */
    public JsonElement getFishType() {
        return (JsonElement) get(7);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.capacity</code>. 승선 가능인원
     */
    public void setCapacity(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.capacity</code>. 승선 가능인원
     */
    public Integer getCapacity() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.confirm_count</code>. 예약 확정된 인원수
     */
    public void setConfirmCount(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.confirm_count</code>. 예약 확정된 인원수
     */
    public Integer getConfirmCount() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.deposit_waiting_count</code>.
     */
    public void setDepositWaitingCount(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.deposit_waiting_count</code>.
     */
    public Integer getDepositWaitingCount() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.waiting_count</code>. 예약 대기 인원수
     */
    public void setWaitingCount(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.waiting_count</code>. 예약 대기 인원수
     */
    public Integer getWaitingCount() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.price</code>. 금액
     */
    public void setPrice(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.price</code>. 금액
     */
    public Integer getPrice() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.captain_id</code>. 선장 아이디
     */
    public void setCaptainId(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.captain_id</code>. 선장 아이디
     */
    public Integer getCaptainId() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.use_yn</code>.
     */
    public void setUseYn(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.use_yn</code>.
     */
    public String getUseYn() {
        return (String) get(14);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.cancel_code</code>. 일정 취소 코드
 - code_master(SCHEDULE_CANCEL)
 - 가타(99) 입력시 cancel_reason에 기타 사유 입력 할 수 있도록 해야함
     */
    public void setCancelCode(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.cancel_code</code>. 일정 취소 코드
 - code_master(SCHEDULE_CANCEL)
 - 가타(99) 입력시 cancel_reason에 기타 사유 입력 할 수 있도록 해야함
     */
    public String getCancelCode() {
        return (String) get(15);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.cancel_reason</code>.
     */
    public void setCancelReason(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.cancel_reason</code>.
     */
    public String getCancelReason() {
        return (String) get(16);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.cancel_date</code>.
     */
    public void setCancelDate(LocalDateTime value) {
        set(17, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.cancel_date</code>.
     */
    public LocalDateTime getCancelDate() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.updated</code>.
     */
    public void setUpdated(LocalDateTime value) {
        set(18, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.updated</code>.
     */
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>fishing_reservation.schedule.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(19, value);
    }

    /**
     * Getter for <code>fishing_reservation.schedule.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row20<Integer, Integer, Integer, String, String, String, String, JsonElement, Integer, Integer, Integer, Integer, Integer, Integer, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row20<Integer, Integer, Integer, String, String, String, String, JsonElement, Integer, Integer, Integer, Integer, Integer, Integer, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row20) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Schedule.SCHEDULE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Schedule.SCHEDULE.APP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Schedule.SCHEDULE.BOAT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Schedule.SCHEDULE.YYYYMMDD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Schedule.SCHEDULE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Schedule.SCHEDULE.FROM_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Schedule.SCHEDULE.TO_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<JsonElement> field8() {
        return Schedule.SCHEDULE.FISH_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Schedule.SCHEDULE.CAPACITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return Schedule.SCHEDULE.CONFIRM_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Schedule.SCHEDULE.DEPOSIT_WAITING_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Schedule.SCHEDULE.WAITING_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return Schedule.SCHEDULE.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field14() {
        return Schedule.SCHEDULE.CAPTAIN_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return Schedule.SCHEDULE.USE_YN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return Schedule.SCHEDULE.CANCEL_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return Schedule.SCHEDULE.CANCEL_REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field18() {
        return Schedule.SCHEDULE.CANCEL_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field19() {
        return Schedule.SCHEDULE.UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field20() {
        return Schedule.SCHEDULE.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getAppId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getBoatId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getYyyymmdd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getFromTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getToTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonElement component8() {
        return getFishType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getCapacity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getConfirmCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component11() {
        return getDepositWaitingCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component12() {
        return getWaitingCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component14() {
        return getCaptainId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getUseYn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getCancelCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getCancelReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component18() {
        return getCancelDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component19() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component20() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAppId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getBoatId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getYyyymmdd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFromTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getToTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonElement value8() {
        return getFishType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getCapacity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getConfirmCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getDepositWaitingCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getWaitingCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value14() {
        return getCaptainId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getUseYn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getCancelCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getCancelReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value18() {
        return getCancelDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value19() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value20() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value2(Integer value) {
        setAppId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value3(Integer value) {
        setBoatId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value4(String value) {
        setYyyymmdd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value5(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value6(String value) {
        setFromTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value7(String value) {
        setToTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value8(JsonElement value) {
        setFishType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value9(Integer value) {
        setCapacity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value10(Integer value) {
        setConfirmCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value11(Integer value) {
        setDepositWaitingCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value12(Integer value) {
        setWaitingCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value13(Integer value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value14(Integer value) {
        setCaptainId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value15(String value) {
        setUseYn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value16(String value) {
        setCancelCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value17(String value) {
        setCancelReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value18(LocalDateTime value) {
        setCancelDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value19(LocalDateTime value) {
        setUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value20(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, String value6, String value7, JsonElement value8, Integer value9, Integer value10, Integer value11, Integer value12, Integer value13, Integer value14, String value15, String value16, String value17, LocalDateTime value18, LocalDateTime value19, LocalDateTime value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScheduleRecord
     */
    public ScheduleRecord() {
        super(Schedule.SCHEDULE);
    }

    /**
     * Create a detached, initialised ScheduleRecord
     */
    public ScheduleRecord(Integer id, Integer appId, Integer boatId, String yyyymmdd, String name, String fromTime, String toTime, JsonElement fishType, Integer capacity, Integer confirmCount, Integer depositWaitingCount, Integer waitingCount, Integer price, Integer captainId, String useYn, String cancelCode, String cancelReason, LocalDateTime cancelDate, LocalDateTime updated, LocalDateTime created) {
        super(Schedule.SCHEDULE);

        set(0, id);
        set(1, appId);
        set(2, boatId);
        set(3, yyyymmdd);
        set(4, name);
        set(5, fromTime);
        set(6, toTime);
        set(7, fishType);
        set(8, capacity);
        set(9, confirmCount);
        set(10, depositWaitingCount);
        set(11, waitingCount);
        set(12, price);
        set(13, captainId);
        set(14, useYn);
        set(15, cancelCode);
        set(16, cancelReason);
        set(17, cancelDate);
        set(18, updated);
        set(19, created);
    }
}
