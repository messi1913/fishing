/*
 * This file is generated by jOOQ.
 */
package com.ddastudio.fishing.jooq.tables;


import com.ddastudio.fishing.common.converter.JsonColumnBinding;
import com.ddastudio.fishing.jooq.FishingReservation;
import com.ddastudio.fishing.jooq.Indexes;
import com.ddastudio.fishing.jooq.Keys;
import com.ddastudio.fishing.jooq.tables.records.ReservationHistoryRecord;
import com.google.gson.JsonElement;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReservationHistory extends TableImpl<ReservationHistoryRecord> {

    private static final long serialVersionUID = -48696173;

    /**
     * The reference instance of <code>fishing_reservation.reservation_history</code>
     */
    public static final ReservationHistory RESERVATION_HISTORY = new ReservationHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReservationHistoryRecord> getRecordType() {
        return ReservationHistoryRecord.class;
    }

    /**
     * The column <code>fishing_reservation.reservation_history.reservation_id</code>.
     */
    public final TableField<ReservationHistoryRecord, Integer> RESERVATION_ID = createField("reservation_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.seq</code>.
     */
    public final TableField<ReservationHistoryRecord, Integer> SEQ = createField("seq", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.crud</code>.
     */
    public final TableField<ReservationHistoryRecord, String> CRUD = createField("crud", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.app_id</code>.
     */
    public final TableField<ReservationHistoryRecord, Integer> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.schedule_id</code>.
     */
    public final TableField<ReservationHistoryRecord, Integer> SCHEDULE_ID = createField("schedule_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.user_id</code>.
     */
    public final TableField<ReservationHistoryRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.type</code>.
     */
    public final TableField<ReservationHistoryRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.person_count</code>.
     */
    public final TableField<ReservationHistoryRecord, Integer> PERSON_COUNT = createField("person_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.price</code>.
     */
    public final TableField<ReservationHistoryRecord, Integer> PRICE = createField("price", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.status</code>. (STATUS)
     */
    public final TableField<ReservationHistoryRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(2), this, "(STATUS)");

    /**
     * The column <code>fishing_reservation.reservation_history.deposit_status</code>. (DEPOSIT_STATUS)
     */
    public final TableField<ReservationHistoryRecord, String> DEPOSIT_STATUS = createField("deposit_status", org.jooq.impl.SQLDataType.VARCHAR(2), this, "(DEPOSIT_STATUS)");

    /**
     * The column <code>fishing_reservation.reservation_history.depositor</code>.
     */
    public final TableField<ReservationHistoryRecord, String> DEPOSITOR = createField("depositor", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.deposit_deadline</code>.
     */
    public final TableField<ReservationHistoryRecord, LocalDateTime> DEPOSIT_DEADLINE = createField("deposit_deadline", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.request_remarks</code>.
     */
    public final TableField<ReservationHistoryRecord, String> REQUEST_REMARKS = createField("request_remarks", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.remarks</code>.
     */
    public final TableField<ReservationHistoryRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.use_yn</code>.
     */
    public final TableField<ReservationHistoryRecord, String> USE_YN = createField("use_yn", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.cancel_code</code>.
     */
    public final TableField<ReservationHistoryRecord, String> CANCEL_CODE = createField("cancel_code", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.cancel_reason</code>.
     */
    public final TableField<ReservationHistoryRecord, String> CANCEL_REASON = createField("cancel_reason", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.cancel_date</code>.
     */
    public final TableField<ReservationHistoryRecord, LocalDateTime> CANCEL_DATE = createField("cancel_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.push_type</code>.
     */
    public final TableField<ReservationHistoryRecord, JsonElement> PUSH_TYPE = createField("push_type", org.jooq.impl.DefaultDataType.getDefaultDataType("\"fishing_reservation\".\"reservation_history_push_type\""), this, "", new JsonColumnBinding());

    /**
     * The column <code>fishing_reservation.reservation_history.work_id</code>.
     */
    public final TableField<ReservationHistoryRecord, Integer> WORK_ID = createField("work_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>fishing_reservation.reservation_history.created</code>.
     */
    public final TableField<ReservationHistoryRecord, LocalDateTime> CREATED = createField("created", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>fishing_reservation.reservation_history</code> table reference
     */
    public ReservationHistory() {
        this(DSL.name("reservation_history"), null);
    }

    /**
     * Create an aliased <code>fishing_reservation.reservation_history</code> table reference
     */
    public ReservationHistory(String alias) {
        this(DSL.name(alias), RESERVATION_HISTORY);
    }

    /**
     * Create an aliased <code>fishing_reservation.reservation_history</code> table reference
     */
    public ReservationHistory(Name alias) {
        this(alias, RESERVATION_HISTORY);
    }

    private ReservationHistory(Name alias, Table<ReservationHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReservationHistory(Name alias, Table<ReservationHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReservationHistory(Table<O> child, ForeignKey<O, ReservationHistoryRecord> key) {
        super(child, key, RESERVATION_HISTORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return FishingReservation.FISHING_RESERVATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESERVATION_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReservationHistoryRecord> getPrimaryKey() {
        return Keys.KEY_RESERVATION_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReservationHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ReservationHistoryRecord>>asList(Keys.KEY_RESERVATION_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReservationHistory as(String alias) {
        return new ReservationHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReservationHistory as(Name alias) {
        return new ReservationHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReservationHistory rename(String name) {
        return new ReservationHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReservationHistory rename(Name name) {
        return new ReservationHistory(name, null);
    }
}
